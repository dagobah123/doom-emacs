(undo-tree-save-format-version . 1)
"418f84d199969a1445955e2d3c62f14394ec2ecd"
[nil nil nil nil (26304 58394 473206 714000) 0 nil]
([nil nil ((#("f" 0 1 (face font-lock-comment-face fontified t)) . 5) (#("e" 0 1 (face font-lock-comment-face fontified t)) . 5) (#("d" 0 1 (face font-lock-comment-face fontified t)) . 5) (t 26304 56505 844664 311000)) nil (26304 58394 473204 542000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-comment-face fontified t)) . 5) (#("l" 0 1 (face font-lock-comment-face fontified t)) . 5) (#("u" 0 1 (face font-lock-comment-face fontified t)) . 5) (#("a" 0 1 (face font-lock-comment-face fontified t)) . 5)) nil (26304 58394 473202 177000) 0 nil])
([nil nil ((5 . 9)) nil (26304 58394 473200 622000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-comment-face fontified t)) . -7) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -8) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) 9) nil (26304 58394 473199 82000) 0 nil])
([nil nil ((7 . 10)) nil (26304 58394 473187 856000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-comment-face fontified t)) . -9) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) 10) nil (26304 58394 473186 620000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-comment-face fontified t)) . -245) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("f" 0 1 (face font-lock-comment-face fontified t)) . -246) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -247) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (#("u" 0 1 (face font-lock-comment-face fontified t)) . -248) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (#("l" 0 1 (face font-lock-comment-face fontified t)) . -249) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -250) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) 251) nil (26304 58394 473175 387000) 0 nil])
([nil nil ((245 . 248)) nil (26304 58394 472832 695000) 0 nil])
([nil nil ((#("eedd82" 0 6 (face ((:foreground "black") (:background "#eedd82")) fontified t)) . 194) (undo-tree-id121 . -6) (undo-tree-id122 . -6) (undo-tree-id123 . -5) (undo-tree-id124 . -6) (undo-tree-id125 . -5) (undo-tree-id126 . -4) (undo-tree-id127 . -5) (undo-tree-id128 . -4) (undo-tree-id129 . -6) (undo-tree-id130 . -4) (undo-tree-id131 . -4) (undo-tree-id132 . -4) (undo-tree-id133 . -4) 198 (t 26304 58394 486506 354000)) nil (26304 58535 836183 902000) 0 nil])
([nil nil ((nil rear-nonsticky nil 199 . 200) (nil fontified nil 194 . 200) (194 . 200)) nil (26304 58535 836147 707000) 0 nil])
([nil nil ((#("7" 0 1 (face font-lock-string-face fontified t)) . 230) (#("7" 0 1 (face ((:foreground "black") (:background "#77ff77")) fontified t)) . 230) (t 26304 58535 844132 813000)) nil (26304 58595 222657 483000) 0 nil])
([nil nil ((230 . 232)) nil (26304 58595 222656 148000) 0 nil])
([nil nil ((#("7" 0 1 (face font-lock-string-face fontified t)) . 234) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (#("7" 0 1 (face ((:foreground "black") (:background "#33ff77")) fontified t)) . 234)) nil (26304 58595 222654 384000) 0 nil])
([nil nil ((234 . 236)) nil (26304 58595 222438 357000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face fontified t)) . 232) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (#("f" 0 1 (face ((:foreground "black") (:background "#33ff33")) fontified t)) . 232) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1)) nil (26304 58595 222434 662000) 0 nil])
([nil nil ((232 . 234)) nil (26304 58595 222380 20000) 0 nil])
([nil nil ((#("432780" 0 5 (face ((:foreground "white") (:background "#432780")) fontified t) 5 6 (face ((:foreground "white") (:background "#432780")) rear-nonsticky t fontified t)) . 194) (undo-tree-id179 . -6) (undo-tree-id180 . -4) (undo-tree-id181 . -4) (undo-tree-id182 . -4) (undo-tree-id183 . -4) (undo-tree-id184 . -4) 198 (t 26304 58595 229679 450000)) nil (26304 59150 835911 196000) 0 nil])
([nil nil ((nil rear-nonsticky nil 199 . 200) (nil mouse-face highlight 194 . 200) (nil help-echo "H:5.24 S:1.00 V:0.55" 194 . 200) (nil fontified nil 194 . 200) (194 . 200)) nil (26304 59150 835881 501000) 0 nil])
([nil nil ((#("9" 0 1 (face font-lock-string-face fontified t)) . -232) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (#("9" 0 1 (face ((:foreground "white") (:background "#339933")) fontified t)) . -233) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) 234 (t 26304 59150 844567 606000)) nil (26304 59159 150664 585000) 0 nil])
([nil nil ((232 . 234)) nil (26304 59159 150403 673000) 0 nil])
([nil nil ((#("8b008b" 0 5 (face ((:foreground "white") (:background "#8b008b")) fontified t) 5 6 (face ((:foreground "white") (:background "#8b008b")) rear-nonsticky t fontified t)) . 194) (undo-tree-id230 . -6) (undo-tree-id231 . -6) (undo-tree-id232 . -6) (undo-tree-id233 . -5) (undo-tree-id234 . -6) (undo-tree-id235 . -5) (undo-tree-id236 . -4) (undo-tree-id237 . -5) (undo-tree-id238 . -4) (undo-tree-id239 . -4) (undo-tree-id240 . -4) (undo-tree-id241 . -4) (undo-tree-id242 . -4) 198 (t 26304 59159 157794 182000)) nil (26304 59296 393290 583000) 0 nil])
([nil nil ((nil rear-nonsticky nil 199 . 200) (nil fontified nil 194 . 200) (194 . 200)) nil (26304 59296 393250 346000) 0 nil])
([nil nil ((nil fontified nil 268 . 269) (nil fontified nil 267 . 268) (nil fontified nil 260 . 267) (nil fontified nil 259 . 260) (nil fontified nil 244 . 259) (nil fontified nil 240 . 244) (nil fontified nil 239 . 240) (239 . 269) (t 26304 59296 400544 721000)) nil (26304 62958 582964 792000) 0 nil])
([nil nil ((269 . 270)) nil (26304 62958 582962 472000) 0 nil])
([nil nil ((#("77ff77" 0 6 (face ((:foreground "black") (:background "#77ff77")) fontified t)) . 261) (undo-tree-id243 . -6) (undo-tree-id244 . -6) (undo-tree-id245 . -6) (undo-tree-id246 . -5) (undo-tree-id247 . -6) (undo-tree-id248 . -5) (undo-tree-id249 . -4) (undo-tree-id250 . -5) (undo-tree-id251 . -4) (undo-tree-id252 . -3) (undo-tree-id253 . -4) (undo-tree-id254 . -3) (undo-tree-id255 . -2) (undo-tree-id256 . -3) (undo-tree-id257 . -2) (undo-tree-id258 . -1) (undo-tree-id259 . -2) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -6) (undo-tree-id263 . -6) (undo-tree-id264 . -6) (undo-tree-id265 . -6) (undo-tree-id266 . -6) (undo-tree-id267 . -6) (undo-tree-id268 . -6) (undo-tree-id269 . -6)) nil (26304 62958 582959 960000) 0 nil])
([nil nil ((nil fontified nil 266 . 267) (nil fontified nil 261 . 266) (261 . 267)) nil (26304 62958 582902 52000) 0 nil])
([nil nil ((269 . 270) (t 26304 62958 589368 970000)) nil (26304 63008 297907 984000) 0 nil])
([nil nil ((nil rear-nonsticky nil 303 . 304) (nil fontified nil 303 . 304) (nil fontified nil 302 . 303) (nil fontified nil 295 . 302) (nil fontified nil 294 . 295) (nil fontified nil 275 . 294) (nil fontified nil 271 . 275) (nil fontified nil 270 . 271) (270 . 304)) nil (26304 63008 297906 499000) 0 nil])
([nil nil ((#("9b1e55" 0 6 (face ((:foreground "white") (:background "#9b1e55")) fontified t)) . 296) (undo-tree-id270 . -6) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) 297) nil (26304 63008 297902 212000) 0 nil])
([nil nil ((nil rear-nonsticky nil 301 . 302) (nil fontified nil 296 . 302) (296 . 302)) nil (26304 63008 297871 74000) 0 nil])
([nil nil ((nil rear-nonsticky nil 195 . 196) (nil fontified nil 195 . 196) (nil fontified nil 194 . 195) (nil fontified nil 187 . 194) (nil fontified nil 186 . 187) (nil fontified nil 172 . 186) (nil fontified nil 168 . 172) (nil fontified nil 167 . 168) (166 . 196) (nil rear-nonsticky nil 165 . 166) (nil fontified nil 165 . 166) (nil fontified nil 164 . 165) (nil fontified nil 157 . 164) (nil fontified nil 156 . 157) (nil fontified nil 142 . 156) (nil fontified nil 138 . 142) (nil fontified nil 137 . 138) (137 . 166) (#("(setq text-match-2 \"#000000\")" 0 1 (fontified t) 1 5 (face font-lock-keyword-face fontified t) 5 19 (fontified t) 19 20 (face font-lock-string-face fontified t) 20 27 (face ((:foreground "white") (:background "#000000")) fontified t) 27 28 (face font-lock-string-face fontified t) 28 29 (fontified t)) . 137) (undo-tree-id282 . -29) (t 26304 63008 305834 197000)) nil (26305 1202 859228 98000) 0 nil])
([nil nil ((#("match" 0 5 (fontified t)) . 178) (undo-tree-id281 . -5)) nil (26305 1202 859219 94000) 0 nil])
([nil nil ((#("-2" 0 2 (fontified t)) . 178) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -2)) nil (26305 1202 859215 245000) 0 nil])
([nil nil ((178 . 180)) nil (26305 1202 859205 275000) 0 nil])
([nil nil ((#("000000" 0 6 (face ((:foreground "white") (:background "#000000")) fontified t)) . 183) (undo-tree-id276 . -6)) nil (26305 1202 859427 173000) 0 nil])
([nil nil ((nil rear-nonsticky nil 188 . 189) (nil fontified nil 183 . 189) (183 . 189)) nil (26305 1310 896632 103000) 0 nil] [nil nil ((nil rear-nonsticky nil 186 . 187) (nil mouse-face ivy-minibuffer-match-highlight 183 . 187) (nil help-echo ivy--help-echo 183 . 187) (nil fontified nil 183 . 187) (183 . 187)) ((#("neon" 0 3 (help-echo ivy--help-echo mouse-face ivy-minibuffer-match-highlight face font-lock-string-face fontified nil) 3 4 (help-echo ivy--help-echo mouse-face ivy-minibuffer-match-highlight face font-lock-string-face rear-nonsticky nil fontified nil)) . 183) (undo-tree-id283 . -4) (undo-tree-id284 . -4) (undo-tree-id285 . -4) (nil help-echo nil 186 . 187) (nil help-echo nil 183 . 186) (nil mouse-face nil 186 . 187) (nil mouse-face nil 183 . 186) (nil rear-nonsticky t 186 . 187)) (26305 1202 859183 935000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil rear-nonsticky t)) . 329) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (107 . 329) (#("(setq text-match-1 \"#000000\")
(setq text-match-2 \"#000000\")
(setq text-hl \"#8fbc8f\")
(setq background-match-1 \"#006400\")
(setq background-match-2 \"#33bb33\")
(setq background-hl \"#006400\")
(setq background-region \"#33bb33\"" 0 1 (fontified t) 1 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 18 (fontified t) 18 19 (fontified t) 19 20 (face font-lock-string-face fontified t) 20 27 (face ((:foreground "white") (:background "#000000")) fontified t) 27 28 (face font-lock-string-face fontified t) 28 30 (fontified t) 30 31 (fontified t) 31 35 (face font-lock-keyword-face fontified t) 35 36 (fontified t) 36 48 (fontified t) 48 49 (fontified t) 49 50 (face font-lock-string-face fontified t) 50 57 (face ((:foreground "white") (:background "#000000")) fontified t) 57 58 (face font-lock-string-face fontified t) 58 59 (rear-nonsticky t fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 65 (face font-lock-keyword-face fontified t) 65 66 (fontified t) 66 73 (fontified t) 73 74 (fontified t) 74 75 (face font-lock-string-face fontified t) 75 76 (face ((:foreground "black") (:background "#8fbc8f")) fontified t) 76 81 (face ((:foreground "black") (:background "#8fbc8f")) fontified t) 81 82 (face ((:foreground "black") (:background "#8fbc8f")) rear-nonsticky t fontified t) 82 83 (face font-lock-string-face fontified t) 83 84 (rear-nonsticky t fontified t) 84 85 (fontified t) 85 86 (fontified t) 86 90 (face font-lock-keyword-face fontified t) 90 91 (fontified t) 91 109 (fontified t) 109 110 (fontified t) 110 111 (face font-lock-string-face fontified t) 111 112 (face ((:foreground "white") (:background "#006400")) fontified t) 112 117 (face ((:foreground "white") (:background "#006400")) fontified t) 117 118 (face ((:foreground "white") (:background "#006400")) fontified t rear-nonsticky t) 118 119 (face font-lock-string-face fontified t) 119 121 (fontified t) 121 122 (fontified t) 122 126 (face font-lock-keyword-face fontified t) 126 127 (fontified t) 127 145 (fontified t) 145 146 (fontified t) 146 147 (face font-lock-string-face fontified t) 147 154 (face ((:foreground "black") (:background "#33bb33")) fontified t) 154 155 (face font-lock-string-face fontified t) 155 157 (fontified t) 157 158 (fontified t) 158 162 (face font-lock-keyword-face fontified t) 162 163 (fontified t) 163 176 (fontified t) 176 177 (fontified t) 177 178 (face font-lock-string-face fontified t) 178 179 (face ((:foreground "white") (:background "#006400")) fontified t) 179 184 (face ((:foreground "white") (:background "#006400")) fontified t) 184 185 (face ((:foreground "white") (:background "#006400")) fontified t rear-nonsticky t) 185 186 (face font-lock-string-face fontified t) 186 187 (fontified t rear-nonsticky t) 187 188 (fontified t) 188 189 (fontified t) 189 193 (face font-lock-keyword-face fontified t) 193 194 (fontified t) 194 211 (fontified t) 211 212 (fontified t) 212 213 (face font-lock-string-face fontified t) 213 214 (face ((:foreground "black") (:background "#33bb33")) fontified t) 214 219 (face ((:foreground "black") (:background "#33bb33")) fontified t) 219 220 (face ((:foreground "black") (:background "#33bb33")) fontified t rear-nonsticky t) 220 221 (face font-lock-string-face fontified t)) . 107) (undo-tree-id394 . -21) (undo-tree-id395 . -157) (undo-tree-id396 . -157) (undo-tree-id397 . -157) (undo-tree-id398 . -157) (undo-tree-id399 . -157) (undo-tree-id400 . -157) (undo-tree-id401 . -157) (undo-tree-id402 . -157) (undo-tree-id403 . -157) (undo-tree-id404 . -157) (undo-tree-id405 . -157) (undo-tree-id406 . -157) (undo-tree-id407 . -112) (undo-tree-id408 . -179) (undo-tree-id409 . -188) (undo-tree-id410 . -149) (undo-tree-id411 . -154) (undo-tree-id412 . -220) (undo-tree-id413 . -220) (undo-tree-id414 . -220) (undo-tree-id415 . -220) (undo-tree-id416 . -220) (undo-tree-id417 . -220) (undo-tree-id418 . -220) (undo-tree-id419 . -220) (undo-tree-id420 . -220) (undo-tree-id421 . -220) (undo-tree-id422 . -121) (undo-tree-id423 . -220) (undo-tree-id424 . -220) (undo-tree-id425 . -121) (undo-tree-id426 . -220) (undo-tree-id427 . -220) (undo-tree-id428 . -121) (undo-tree-id429 . -85) (undo-tree-id430 . -85) (undo-tree-id431 . -85) (undo-tree-id432 . -214) (undo-tree-id433 . -85) (undo-tree-id434 . -85) (undo-tree-id435 . -85) (undo-tree-id436 . -85) (undo-tree-id437 . -30) (undo-tree-id438 . -73) (undo-tree-id439 . -72) (undo-tree-id440 . -60) (undo-tree-id441 . -73) (undo-tree-id442 . -73) (undo-tree-id443 . -76) (undo-tree-id444 . -76) (undo-tree-id445 . -76) (undo-tree-id446 . -76) (undo-tree-id447 . -143) (undo-tree-id448 . -143) (undo-tree-id449 . -143) (undo-tree-id450 . -76) (undo-tree-id451 . -188) (undo-tree-id452 . -157) (undo-tree-id453 . -188) (undo-tree-id454 . -121) (undo-tree-id455 . -157) (undo-tree-id456 . -85) (undo-tree-id457 . -121) (undo-tree-id458 . -60) (undo-tree-id459 . -85) (undo-tree-id460 . -30) (undo-tree-id461 . -60) (undo-tree-id462 . -30) (undo-tree-id463 . -30) (undo-tree-id464 . -60) (undo-tree-id465 . -30) (undo-tree-id466 . -85) (undo-tree-id467 . -60) (undo-tree-id468 . -121) (undo-tree-id469 . -85) (undo-tree-id470 . -157) (undo-tree-id471 . -121) (undo-tree-id472 . -188) (undo-tree-id473 . -157) (undo-tree-id474 . -188) (undo-tree-id475 . -30) (undo-tree-id476 . -60) (undo-tree-id477 . -30) (undo-tree-id478 . -85) (undo-tree-id479 . -60) (undo-tree-id480 . -121) (undo-tree-id481 . -85) (undo-tree-id482 . -157) (undo-tree-id483 . -121) (undo-tree-id484 . -188) (undo-tree-id485 . -157) (undo-tree-id486 . -188) (undo-tree-id487 . -188) 329 (t 26305 1206 725131 124000)) nil (26305 1462 375106 391000) 0 nil] [nil nil ((#("(setq text-match-1 \"#000000\")
(setq text-match-2 \"#000000\")
(setq text-hl \"#8fbc8f\")
(setq background-match-1 \"#006400\")
(setq background-match-2 \"#33bb33\")
(setq background-hl \"#006400\")
(setq background-region \"#33bb33\")" 0 1 (fontified t) 1 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 18 (fontified t) 18 19 (fontified t) 19 20 (face font-lock-string-face fontified t) 20 27 (face ((:foreground "white") (:background "#000000")) fontified t) 27 28 (face font-lock-string-face fontified t) 28 30 (fontified t) 30 31 (fontified t) 31 35 (face font-lock-keyword-face fontified t) 35 36 (fontified t) 36 48 (fontified t) 48 49 (fontified t) 49 50 (face font-lock-string-face fontified t) 50 57 (face ((:foreground "white") (:background "#000000")) fontified t) 57 58 (face font-lock-string-face fontified t) 58 59 (rear-nonsticky t fontified t) 59 60 (fontified t) 60 61 (fontified t) 61 65 (face font-lock-keyword-face fontified t) 65 66 (fontified t) 66 73 (fontified t) 73 74 (fontified t) 74 75 (face font-lock-string-face fontified t) 75 76 (face ((:foreground "black") (:background "#8fbc8f")) fontified t) 76 81 (face ((:foreground "black") (:background "#8fbc8f")) fontified t) 81 82 (face ((:foreground "black") (:background "#8fbc8f")) rear-nonsticky t fontified t) 82 83 (face font-lock-string-face fontified t) 83 84 (rear-nonsticky t fontified t) 84 85 (fontified t) 85 86 (fontified t) 86 90 (face font-lock-keyword-face fontified t) 90 91 (fontified t) 91 109 (fontified t) 109 110 (fontified t) 110 111 (face font-lock-string-face fontified t) 111 112 (face ((:foreground "white") (:background "#006400")) fontified t) 112 117 (face ((:foreground "white") (:background "#006400")) fontified t) 117 118 (face ((:foreground "white") (:background "#006400")) fontified t rear-nonsticky t) 118 119 (face font-lock-string-face fontified t) 119 121 (fontified t) 121 122 (fontified t) 122 126 (face font-lock-keyword-face fontified t) 126 127 (fontified t) 127 145 (fontified t) 145 146 (fontified t) 146 147 (face font-lock-string-face fontified t) 147 154 (face ((:foreground "black") (:background "#33bb33")) fontified t) 154 155 (face font-lock-string-face fontified t) 155 157 (fontified t) 157 158 (fontified t) 158 162 (face font-lock-keyword-face fontified t) 162 163 (fontified t) 163 176 (fontified t) 176 177 (fontified t) 177 178 (face font-lock-string-face fontified t) 178 179 (face ((:foreground "white") (:background "#006400")) fontified t) 179 184 (face ((:foreground "white") (:background "#006400")) fontified t) 184 185 (face ((:foreground "white") (:background "#006400")) fontified t rear-nonsticky t) 185 186 (face font-lock-string-face fontified t) 186 187 (fontified t rear-nonsticky t) 187 188 (fontified t) 188 189 (fontified t) 189 193 (face font-lock-keyword-face fontified t) 193 194 (fontified t) 194 211 (fontified t) 211 212 (fontified t) 212 213 (face font-lock-string-face fontified t) 213 214 (face ((:foreground "black") (:background "#33bb33")) fontified t) 214 219 (face ((:foreground "black") (:background "#33bb33")) fontified t) 219 220 (face ((:foreground "black") (:background "#33bb33")) fontified t rear-nonsticky t) 220 221 (face font-lock-string-face fontified t) 221 222 (fontified t rear-nonsticky t)) . 107) (undo-tree-id286 . -150) (undo-tree-id287 . -21) (undo-tree-id288 . -157) (undo-tree-id289 . -157) (undo-tree-id290 . -157) (undo-tree-id291 . -157) (undo-tree-id292 . -157) (undo-tree-id293 . -157) (undo-tree-id294 . -157) (undo-tree-id295 . -157) (undo-tree-id296 . -157) (undo-tree-id297 . -157) (undo-tree-id298 . -157) (undo-tree-id299 . -157) (undo-tree-id300 . -112) (undo-tree-id301 . -179) (undo-tree-id302 . -188) (undo-tree-id303 . -149) (undo-tree-id304 . -154) (undo-tree-id305 . -220) (undo-tree-id306 . -220) (undo-tree-id307 . -220) (undo-tree-id308 . -220) (undo-tree-id309 . -220) (undo-tree-id310 . -220) (undo-tree-id311 . -220) (undo-tree-id312 . -220) (undo-tree-id313 . -220) (undo-tree-id314 . -220) (undo-tree-id315 . -121) (undo-tree-id316 . -220) (undo-tree-id317 . -220) (undo-tree-id318 . -121) (undo-tree-id319 . -220) (undo-tree-id320 . -220) (undo-tree-id321 . -121) (undo-tree-id322 . -85) (undo-tree-id323 . -85) (undo-tree-id324 . -85) (undo-tree-id325 . -214) (undo-tree-id326 . -85) (undo-tree-id327 . -85) (undo-tree-id328 . -85) (undo-tree-id329 . -85) (undo-tree-id330 . -30) (undo-tree-id331 . -73) (undo-tree-id332 . -72) (undo-tree-id333 . -60) (undo-tree-id334 . -73) (undo-tree-id335 . -73) (undo-tree-id336 . -76) (undo-tree-id337 . -76) (undo-tree-id338 . -76) (undo-tree-id339 . -76) (undo-tree-id340 . -143) (undo-tree-id341 . -143) (undo-tree-id342 . -143) (undo-tree-id343 . -76) (undo-tree-id344 . -222) (undo-tree-id345 . -188) (undo-tree-id346 . -157) (undo-tree-id347 . -188) (undo-tree-id348 . -121) (undo-tree-id349 . -157) (undo-tree-id350 . -85) (undo-tree-id351 . -121) (undo-tree-id352 . -60) (undo-tree-id353 . -85) (undo-tree-id354 . -30) (undo-tree-id355 . -60) (undo-tree-id356 . -30) (undo-tree-id357 . -30) (undo-tree-id358 . -60) (undo-tree-id359 . -30) (undo-tree-id360 . -85) (undo-tree-id361 . -60) (undo-tree-id362 . -121) (undo-tree-id363 . -85) (undo-tree-id364 . -157) (undo-tree-id365 . -121) (undo-tree-id366 . -188) (undo-tree-id367 . -157) (undo-tree-id368 . -188) (undo-tree-id369 . -222) (undo-tree-id370 . -222) (undo-tree-id371 . -188) (undo-tree-id372 . -222) (undo-tree-id373 . -222) (undo-tree-id374 . -222) (undo-tree-id375 . -222) 329 (t 26305 1206 725131 124000)) ((107 . 329)) (26305 1310 532632 308000) 0 nil])
nil
([nil nil ((#("0" 0 1 (face font-lock-string-face fontified t)) . 129) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (#("0" 0 1 (face ((:foreground "white") (:background "#006400")) fontified t)) . 129) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (t 26305 1466 330599 603000)) nil (26305 57040 666121 74000) 0 nil] [nil nil ((#("006400" 0 5 (face ((:foreground "white") (:background "#006400")) fontified t) 5 6 (face ((:foreground "white") (:background "#006400")) fontified t rear-nonsticky t)) . 129) (undo-tree-id488 . -6) (undo-tree-id490 . -6) (undo-tree-id492 . -6) (undo-tree-id494 . -6) (undo-tree-id496 . -6) (undo-tree-id498 . -6) (t 26305 1326 932593 336000)) ((129 . 135)) (26305 1460 698535 20000) 0 nil])
([nil nil ((107 . 108)) ((#("s" 0 1 (fontified t)) . 107) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1)) (26305 1310 532202 736000) 0 nil])
([nil nil ((129 . 131)) nil (26305 57040 666034 339000) 0 nil])
([nil nil ((nil rear-nonsticky nil 134 . 135) (nil fontified nil 129 . 135) (129 . 135)) ((#("33bb33" 0 5 (face ((:foreground "black") (:background "#33bb33")) fontified nil) 5 6 (face ((:foreground "black") (:background "#33bb33")) rear-nonsticky nil fontified nil)) . 129) (nil rear-nonsticky t 134 . 135) (t 26305 1434 774693 395000)) (26305 1434 766849 470000) 0 nil])
nil
([nil nil ((#("4" 0 1 (face ((:foreground "white") (:background "#400")) fontified t)) . 129) (#("6" 0 1 (face font-lock-string-face fontified t)) . 129) (#("4" 0 1 (face font-lock-string-face fontified t)) . 129) (#("6" 0 1 (face ((:foreground "white") (:background "#646400")) fontified t)) . 129) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (t 26305 57040 680532 693000)) nil (26305 57239 397954 657000) 0 nil])
nil
([nil nil ((129 . 133)) nil (26305 57239 397947 455000) 0 nil])
([nil nil ((#("6" 0 1 (face ((:foreground "white") (:background "#600")) fontified t)) . -129) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (#("6" 0 1 (face font-lock-string-face fontified t)) . -130) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (#("6" 0 1 (face font-lock-string-face fontified t)) . -131) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (#("6" 0 1 (face ((:foreground "white") (:background "#666600")) fontified t)) . -132) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) 133) nil (26305 57239 397941 871000) 0 nil])
([nil nil ((131 . 135)) nil (26305 57239 397848 393000) 0 nil])
([nil nil ((#("9" 0 1 (face font-lock-string-face fontified t)) . -133) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (#("9" 0 1 (face ((:foreground "white") (:background "#000099")) fontified t)) . -134) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) 135) nil (26305 57239 397846 425000) 0 nil])
([nil nil ((133 . 135)) nil (26305 57239 397820 621000) 0 nil])
([nil nil ((#("0" 0 1 (face ((:foreground "black") (:background "#0ff")) fontified t)) . -129) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (#("0" 0 1 (face font-lock-string-face fontified t)) . -130) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (#("0" 0 1 (face font-lock-string-face fontified t)) . -131) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (#("0" 0 1 (face ((:foreground "white") (:background "#0000ff")) fontified t)) . -132) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) 133) nil (26305 57239 397814 981000) 0 nil])
([nil nil ((129 . 133)) nil (26305 57239 397575 867000) 0 nil])
([nil nil ((#("6" 0 1 (face ((:foreground "black") (:background "#6ff")) fontified t)) . -129) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#("6" 0 1 (face font-lock-string-face fontified t)) . -130) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (#("6" 0 1 (face font-lock-string-face fontified t)) . -131) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (#("6" 0 1 (face ((:foreground "white") (:background "#6666ff")) fontified t)) . -132) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) 133) nil (26305 57239 397572 294000) 0 nil])
([nil nil ((129 . 133)) nil (26305 57239 397486 226000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face fontified t)) . 133) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("f" 0 1 (face ((:foreground "white") (:background "#4444ff")) fontified t)) . 133) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1)) nil (26305 57239 397483 935000) 0 nil])
([nil nil ((133 . 135)) nil (26305 57239 397464 433000) 0 nil])
([nil nil ((#("8fbc8f" 0 6 (face ((:foreground "black") (:background "#8fbc8f")) fontified t)) . 261) (undo-tree-id6 . -6) (undo-tree-id7 . -6) (undo-tree-id8 . -5) (undo-tree-id9 . -6) (undo-tree-id10 . -5) (undo-tree-id11 . -4) (undo-tree-id12 . -5) (undo-tree-id13 . -4) (undo-tree-id14 . -3) (undo-tree-id15 . -4) (undo-tree-id16 . -3) (undo-tree-id17 . -2) (undo-tree-id18 . -3) (undo-tree-id19 . -2) (undo-tree-id20 . -1) (undo-tree-id21 . -2) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -6)) nil (26305 57239 397460 629000) 0 nil])
([nil nil ((261 . 267)) nil (26305 57239 397063 309000) 0 nil])
([nil nil ((#("ffffff" 0 6 (face ((:foreground "black") (:background "#ffffff")) fontified t)) . 261) (undo-tree-id348 . -6) (undo-tree-id349 . -6) (undo-tree-id350 . -6) (undo-tree-id351 . -6) (undo-tree-id352 . -6) (t 26305 57239 405954 519000)) nil (26305 57263 360240 560000) 0 nil])
([nil nil ((261 . 267)) nil (26305 57348 582621 256000) 0 nil])
([nil nil ((#("000000" 0 6 (face ((:foreground "white") (:background "#000000")) fontified t)) . 261) (undo-tree-id438 . -6) (undo-tree-id439 . -5) (undo-tree-id440 . -4) (undo-tree-id441 . -5) (undo-tree-id442 . -4) (undo-tree-id443 . -4) (undo-tree-id444 . -4) (undo-tree-id445 . -4) (undo-tree-id446 . -4) 265) nil (26305 57353 201530 317000) 0 nil] [nil nil ((#("000000" 0 6 (face ((:foreground "white") (:background "#000000")) fontified t)) . 291) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id382 . -1) (undo-tree-id384 . -1) (undo-tree-id386 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id397 . -1) (undo-tree-id399 . -6) (t 26305 57263 368602 779000)) ((291 . 297)) (26305 57348 235973 203000) 0 nil])
([nil nil ((261 . 267)) nil (26305 57353 201494 957000) 0 nil])
([nil nil ((291 . 297)) ((#("bbbbbb" 0 6 (face ((:foreground "black") (:background "#bbbbbb")) fontified t)) . 291) (undo-tree-id437 . -6)) (26305 57347 694863 936000) 0 nil])
([nil nil ((nil fontified nil 357 . 358) (nil fontified nil 356 . 357) (nil fontified nil 349 . 356) (nil fontified nil 348 . 349) (nil fontified nil 347 . 348) (nil fontified nil 346 . 347) (nil fontified nil 336 . 346) (nil fontified nil 335 . 336) (nil fontified nil 331 . 335) (nil fontified nil 330 . 331) (330 . 358) (t 26305 57353 210024 673000)) nil (26305 57543 437616 190000) 0 nil])
([nil nil ((#("bbbbbb" 0 6 (face ((:foreground "black") (:background "#bbbbbb")) fontified t)) . 291) (undo-tree-id400 . -6) (undo-tree-id402 . -2) (undo-tree-id404 . -3) (undo-tree-id406 . -3) (undo-tree-id408 . -6) (undo-tree-id410 . -6) (undo-tree-id412 . -6) (undo-tree-id414 . -6) (t 26305 57315 601012 400000)) ((291 . 297)) (26305 57347 306945 565000) 0 nil])
([nil nil ((358 . 359)) nil (26305 57543 437612 900000) 0 nil])
([nil nil ((291 . 297)) ((#("dddddd" 0 6 (face ((:foreground "black") (:background "#dddddd")) fontified t)) . 291) (undo-tree-id416 . -6) (undo-tree-id417 . -6) (undo-tree-id418 . -6) (undo-tree-id419 . -6) (undo-tree-id420 . -6) (undo-tree-id421 . -6) (undo-tree-id422 . -6) (undo-tree-id423 . -6) (undo-tree-id424 . -6) (undo-tree-id425 . -6) (undo-tree-id426 . -6) (undo-tree-id427 . -6) (undo-tree-id428 . -6) (undo-tree-id429 . -6) (undo-tree-id430 . -6) (undo-tree-id431 . -6) (undo-tree-id432 . -6) (undo-tree-id433 . -6) (undo-tree-id434 . -6) (undo-tree-id435 . -6) (undo-tree-id436 . -6) (t 26305 57324 657256 353000)) (26305 57324 648770 834000) 0 nil])
([nil nil ((#("000000" 0 6 (face ((:foreground "white") (:background "#000000")) fontified t)) . 350) (undo-tree-id447 . -6) (undo-tree-id448 . -6) (undo-tree-id449 . -6) (undo-tree-id450 . -6) (undo-tree-id451 . -6) (undo-tree-id452 . -6) (undo-tree-id453 . -6) (undo-tree-id454 . -6) (undo-tree-id455 . -6)) nil (26305 57543 437611 335000) 0 nil])
nil
([nil nil ((350 . 356)) nil (26305 57543 437590 133000) 0 nil])
([nil nil ((#("dddd\")
" 0 4 (face ((:foreground "black") (:background "#dddddd")) fontified nil) 4 5 (face font-lock-string-face fontified nil) 5 6 (fontified nil rear-nonsticky t) 6 7 (fontified nil)) . 330) (undo-tree-id456 . -4) (undo-tree-id457 . -4) (undo-tree-id458 . -4) (undo-tree-id459 . -4) (undo-tree-id460 . -4) (undo-tree-id461 . -4) (undo-tree-id462 . -4) (undo-tree-id463 . -4) (undo-tree-id464 . -4) (undo-tree-id465 . -4) (undo-tree-id466 . -7) (undo-tree-id467 . -7) (#("(setq text-region \"#dd" 0 1 (fontified t) 1 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 16 (fontified t) 16 17 (fontified t rear-nonsticky t) 17 18 (fontified t) 18 19 (face font-lock-string-face fontified t) 19 22 (face ((:foreground "black") (:background "#dddddd")) fontified t)) . -330) (undo-tree-id468 . -20) (undo-tree-id469 . -17) (undo-tree-id470 . -17) (undo-tree-id471 . -17) (undo-tree-id472 . -17) (undo-tree-id473 . -17) (undo-tree-id474 . -17) (undo-tree-id475 . -17) (undo-tree-id476 . -17) (undo-tree-id477 . -17) (undo-tree-id478 . -17) (undo-tree-id479 . -17) (undo-tree-id480 . -17) (undo-tree-id481 . -17) (undo-tree-id482 . -17) (undo-tree-id483 . -17) (undo-tree-id484 . -17) (undo-tree-id485 . -17) (undo-tree-id486 . -18) (undo-tree-id487 . -6) (undo-tree-id488 . -22) (undo-tree-id489 . -22) (undo-tree-id490 . -22) (undo-tree-id491 . -22) (undo-tree-id492 . -22) (undo-tree-id493 . -22) 352 (t 26305 57543 446116 54000)) nil (26305 57810 704476 699000) 0 nil])
([nil nil ((#("dddddd" 0 6 (face ((:foreground "black") (:background "#dddddd")) fontified t)) . 261) (undo-tree-id494 . -6) (undo-tree-id495 . -6) (undo-tree-id496 . -6) (undo-tree-id497 . -6) (undo-tree-id498 . -6) (undo-tree-id499 . -6) (undo-tree-id500 . -6) (undo-tree-id501 . -6) (undo-tree-id502 . -6) (undo-tree-id503 . -6) (undo-tree-id504 . -6) (undo-tree-id505 . -6) (undo-tree-id506 . -6) (undo-tree-id507 . -6) (undo-tree-id508 . -6) (undo-tree-id509 . -6) (t 26305 57810 713779 453000)) nil (26305 57976 563780 781000) 0 nil])
([nil nil ((261 . 267)) nil (26305 57976 563733 342000) 0 nil])
([nil nil ((#("bbbbbb" 0 6 (face ((:foreground "black") (:background "#bbbbbb")) fontified t)) . 261) (undo-tree-id510 . -6) (undo-tree-id511 . -6) (undo-tree-id512 . -5) (undo-tree-id513 . -6) (undo-tree-id514 . -5) (undo-tree-id515 . -4) (undo-tree-id516 . -5) (undo-tree-id517 . -4) (undo-tree-id518 . -4) (undo-tree-id519 . -4) (undo-tree-id520 . -4) (undo-tree-id521 . -4) (undo-tree-id522 . -4) (undo-tree-id523 . -4) (undo-tree-id524 . -4) (undo-tree-id525 . -4) (undo-tree-id526 . -4) (undo-tree-id527 . -4) (undo-tree-id528 . -4) (undo-tree-id529 . -4) 265 (t 26305 57976 575937 649000)) nil (26305 57991 39527 582000) 0 nil])
([nil nil ((261 . 267)) nil (26305 58012 278457 763000) 0 nil])
([nil nil ((#("4444" 0 4 (face ((:foreground "white") (:background "#4444dd")) fontified t)) . -129) (undo-tree-id539 . -4) (undo-tree-id540 . -4) (undo-tree-id541 . -4) (undo-tree-id542 . -4) (undo-tree-id543 . -4) (undo-tree-id544 . -4) (undo-tree-id545 . -4) (undo-tree-id546 . -4) (undo-tree-id547 . -4) (undo-tree-id548 . -4) 133 (t 26305 57991 48378 355000)) nil (26305 58017 149954 18000) 0 nil] [nil nil ((#("d" 0 1 (face font-lock-string-face fontified t)) . 133) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (#("d" 0 1 (face ((:foreground "white") (:background "#4444dd")) fontified t)) . 133) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (t 26305 57991 48378 355000)) ((133 . 134) (133 . 134)) (26305 58012 21963 425000) 0 nil])
([nil nil ((129 . 133)) nil (26305 58017 149930 655000) 0 nil])
([nil nil ((133 . 135)) ((#("ff" 0 2 (face ((:foreground "white") (:background "#4444ff")) fontified t)) . 133) (undo-tree-id536 . -2) (undo-tree-id537 . -2) (undo-tree-id538 . -2)) (26305 58012 21777 436000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-string-face fontified t)) . 133) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (#("d" 0 1 (face ((:foreground "white") (:background "#6666dd")) fontified t)) . 133) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (t 26305 58017 158170 116000)) nil (26305 58041 24534 163000) 0 nil])
nil
([nil nil ((133 . 135)) nil (26305 58041 24514 231000) 0 nil])
([nil nil ((nil rear-nonsticky nil 134 . 135) (nil mouse-face highlight 129 . 135) (nil help-echo "H:3.62 S:0.61 V:0.71" 129 . 135) (nil fontified nil 129 . 135) (129 . 135) (t 26305 58041 33890 551000)) nil (26312 61429 753784 478000) 0 nil])
([nil nil ((#("6666ff" 0 6 (face ((:foreground "black") (:background "#4682b46666ff")) fontified t)) . 135) (undo-tree-id0 . -6)) nil (26312 61429 753777 572000) 0 nil])
([nil nil ((#("4682b4" 0 5 (face ((:foreground "white") (:background "#4682b4")) fontified t) 5 6 (face ((:foreground "white") (:background "#4682b4")) rear-nonsticky t fontified t)) . 129) (undo-tree-id1 . -6) (undo-tree-id2 . -6) (undo-tree-id3 . -6) (undo-tree-id4 . -6) (undo-tree-id5 . -6) (undo-tree-id6 . -5) (undo-tree-id7 . -6) (undo-tree-id8 . -5) (undo-tree-id9 . -4) (undo-tree-id10 . -5) (undo-tree-id11 . -4) (undo-tree-id12 . -4) (undo-tree-id13 . -4) (undo-tree-id14 . -4) (undo-tree-id15 . -4) 133 (t 26312 61429 762232 115000)) nil (26312 61461 58339 484000) 0 nil])
([nil current ((nil rear-nonsticky nil 134 . 135) (nil mouse-face highlight 129 . 135) (nil help-echo "H:3.93 S:0.71 V:0.88" 129 . 135) (nil fontified nil 129 . 135) (129 . 135)) nil (26312 61461 58310 477000) 0 nil])
nil
